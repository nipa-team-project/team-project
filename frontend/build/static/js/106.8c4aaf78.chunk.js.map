{"version":3,"file":"static/js/106.8c4aaf78.chunk.js","mappings":"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","sources":["signup/pages/Signup.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Signup.css\";\r\n\r\nconst Signup = () => {\r\n  const initialFormData = {\r\n    userid: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [isUseridAvailable, setIsUseridAvailable] = useState(null);\r\n  const [passwordMismatch, setPasswordMismatch] = useState(false);\r\n  const [invalidEmail, setInvalidEmail] = useState(false);\r\n  const [useridErrorMessage, setUseridErrorMessage] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [mobilePage, setMobilePage] = useState(1);\r\n\r\n  const nextpage = () => {\r\n    if (mobilePage === 1) {\r\n      setMobilePage(2);\r\n    } else if (mobilePage === 2) {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      if (window.innerWidth < 768) {\r\n        setIsMobile(true);\r\n      } else {\r\n        setIsMobile(false);\r\n      }\r\n    }\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"email\") {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      const isValidEmail = emailRegex.test(value);\r\n      setInvalidEmail(!isValidEmail);\r\n    }\r\n\r\n    if (name === \"phoneNumber\") {\r\n      const cleanedValue = value.replace(/[^0-9]/g, \"\");\r\n      const formattedValue = cleanedValue.replace(\r\n        /(\\d{3})(\\d{0,4})(\\d{0,4})/,\r\n        (match, p1, p2, p3) => {\r\n          let result = p1;\r\n          if (p2) result += `-${p2}`;\r\n          if (p3) result += `-${p3}`;\r\n          return result;\r\n        }\r\n      );\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: formattedValue,\r\n      }));\r\n    } else {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n\r\n    if (name === \"password\") {\r\n      const isPasswordValid = validatePassword(value);\r\n      setFormData({ ...formData, [name]: value });\r\n\r\n      if (!isPasswordValid) {\r\n        setError(true);\r\n        setPasswordError(\r\n          \"영문 대/소문자, 숫자, 특수문자 중 2가지 이상 조합하여 8~16자를 입력하세요.\"\r\n        );\r\n      } else {\r\n        setError(false);\r\n        setPasswordError(\"\");\r\n      }\r\n    }\r\n\r\n    if (name === \"confirmPassword\" && value && formData.password) {\r\n      setPasswordMismatch(formData.password !== value);\r\n    }\r\n\r\n    if (name === \"userid\") {\r\n      setIsUseridAvailable(null);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    // 비밀번호 유효성 검사 규칙\r\n    const lowercase = /[a-z]/.test(password);\r\n    const uppercase = /[A-Z]/.test(password);\r\n    const numeric = /[0-9]/.test(password);\r\n    const special = /[@$!%*?&]/.test(password);\r\n    const length = password.length >= 8 && password.length <= 16;\r\n\r\n    let conditionsMet = 0;\r\n\r\n    if (lowercase) conditionsMet++;\r\n    if (uppercase) conditionsMet++;\r\n    if (numeric) conditionsMet++;\r\n    if (special) conditionsMet++;\r\n\r\n    // 조건이 2개 이상 충족되고 길이가 8에서 16 사이인 경우 유효\r\n    return conditionsMet >= 2 && length;\r\n  };\r\n\r\n  const handleCheckAvailability = () => {\r\n    if (formData.userid.length < 4) {\r\n      setUseridErrorMessage(\"4글자 이상 입력하세요.\");\r\n      return;\r\n    }\r\n\r\n    const isAvailable = !formData.userid.includes(\"admin\");\r\n    setIsUseridAvailable(isAvailable);\r\n\r\n    if (isAvailable) {\r\n      setUseridErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (\r\n      formData.userid.length < 4 ||\r\n      !validatePassword(formData.password) ||\r\n      passwordMismatch ||\r\n      invalidEmail\r\n    ) {\r\n      // alert(\"모두 작성하세요.\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFormData(initialFormData);\r\n    setPasswordMismatch(false);\r\n    setIsUseridAvailable(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"signup-text\">회원가입</h1>\r\n      <form className=\"signup-form\">\r\n        <div\r\n          style={{\r\n            display: isMobile && mobilePage !== 1 ? \"none\" : \"block\",\r\n          }}\r\n        >\r\n          <label className=\"signup-label\">아이디 </label>\r\n          <div className=\"id-content\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"userid\"\r\n              value={formData.userid}\r\n              onChange={handleChange}\r\n              className=\"id-input\"\r\n              placeholder=\"아이디를 입력해주세요.\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"double_check\"\r\n              onClick={handleCheckAvailability}\r\n            >\r\n              중복확인\r\n            </button>\r\n          </div>\r\n          {useridErrorMessage && (\r\n            <p className=\"isuserid_available\">{useridErrorMessage}</p>\r\n          )}\r\n\r\n          {isUseridAvailable !== null && (\r\n            <p className=\"isuserid_available\">\r\n              {isUseridAvailable\r\n                ? \"사용 가능한 아이디입니다.\"\r\n                : \"이미 사용 중인 아이디입니다.\"}\r\n            </p>\r\n          )}\r\n\r\n          <label className=\"signup-label\">비밀번호 </label>\r\n          <input\r\n            className={`signup-input ${error ? \"error-border\" : \"\"}`}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n          />\r\n          {passwordError && (\r\n            <p className=\"password_mismatch\">{passwordError}</p>\r\n          )}\r\n\r\n          <label className=\"signup-label\">비밀번호 확인 </label>\r\n          <input\r\n            className=\"signup-input\"\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n          />\r\n          {passwordMismatch && formData.confirmPassword && (\r\n            <p className=\"password_mismatch\">\r\n              비밀번호가 일치하지 않습니다. 다시 입력해주세요.\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: isMobile && mobilePage !== 2 ? \"none\" : \"block\",\r\n          }}\r\n        >\r\n          <label className=\"signup-label\">이름</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"이름을 입력해주세요.\"\r\n            className=\"signup-input\"\r\n          />\r\n\r\n          <label className=\"signup-label\">이메일</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"이메일을 입력해주세요.\"\r\n            className=\"signup-input\"\r\n          />\r\n          {invalidEmail && formData.email && (\r\n            <p className=\"invalid_email\">\r\n              잘못된 형식의 이메일입니다. 다시 입력해주세요.\r\n            </p>\r\n          )}\r\n\r\n          <label className=\"signup-label\">휴대전화</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"phoneNumber\"\r\n            value={formData.phoneNumber}\r\n            onChange={handleChange}\r\n            placeholder=\"휴대전화 번호를 입력해주세요.\"\r\n            className=\"signup-input\"\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"signup-bottom\">\r\n        <button type=\"button\" className=\"reset_button\" onClick={handleReset}>\r\n          초기화\r\n        </button>\r\n        <button\r\n          className=\"signup-next\"\r\n          style={{\r\n            display: isMobile && mobilePage === 1 ? \"block\" : \"none\",\r\n            marginLeft: \"0.5rem\",\r\n            background: \"#4F80FF\",\r\n            border: \"none\",\r\n            color: \"#ffffff\",\r\n          }}\r\n          onClick={nextpage}\r\n        >\r\n          {mobilePage === 1 ? \"다음으로\" : \"다음 단계\"}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"signup_button\"\r\n          onClick={handleSubmit}\r\n          style={{\r\n            display: isMobile ? (mobilePage === 2 ? \"block\" : \"none\") : \"block\",\r\n          }}\r\n        >\r\n          회원가입 하기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}"],"names":["initialFormData","userid","password","confirmPassword","name","email","phoneNumber","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","isUseridAvailable","setIsUseridAvailable","_useState5","_useState6","passwordMismatch","setPasswordMismatch","_useState7","_useState8","invalidEmail","setInvalidEmail","_useState9","_useState10","useridErrorMessage","setUseridErrorMessage","_useState11","_useState12","passwordError","setPasswordError","_useState13","_useState14","error","setError","_useState15","_useState16","isMobile","setIsMobile","_useState17","_useState18","mobilePage","setMobilePage","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","handleChange","e","_e$target","target","value","isValidEmail","test","formattedValue","replace","match","p1","p2","p3","result","concat","prevData","_objectSpread","_defineProperty","isPasswordValid","validatePassword","lowercase","uppercase","numeric","special","length","conditionsMet","_jsxs","children","_jsx","className","style","display","type","onChange","placeholder","onClick","isAvailable","includes","marginLeft","background","border","color","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}